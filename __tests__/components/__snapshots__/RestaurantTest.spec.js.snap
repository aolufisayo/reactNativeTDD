// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Restaurant should render restaurant component 1`] = `
<View>
  <View>
    <View
      style={
        Object {
          "borderRadius": 3,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="addRestaurantButton"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#2089dc",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 18,
                "paddingBottom": 1,
                "paddingTop": 2,
                "textAlign": "center",
              }
            }
          >
            Add Restaurant
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      }
    }
  >
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      visible={false}
    >
      <View
        style={
          Object {
            "paddingHorizontal": 10,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#86939e",
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          Restaurant Name
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "borderBottomWidth": 1,
              "borderColor": "#86939e",
              "flexDirection": "row",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Object {
                "alignSelf": "center",
                "color": "black",
                "flex": 1,
                "fontSize": 18,
                "minHeight": 40,
              }
            }
            testID="addRestaurantText"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "borderRadius": 3,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="addRestaurantSaveButton"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2089dc",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "paddingBottom": 1,
                  "paddingTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "borderRadius": 3,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="cancelAddRestaurantButton"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2089dc",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "paddingBottom": 1,
                  "paddingTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
